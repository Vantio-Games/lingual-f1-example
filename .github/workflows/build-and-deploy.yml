name: Build and Deploy Language Packages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.check-changes.outputs.has-changes }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install -g lingual-lang
    
    - name: Build packages
      run: npx lingual-lang build f1.example
    
    - name: Check for changes
      id: check-changes
      run: |
        # Check if there are any changes in the out directory
        if [ -d "out" ] && [ "$(ls -A out)" ]; then
          echo "has-changes=true" >> $GITHUB_OUTPUT
        else
          echo "has-changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: List generated languages
      run: |
        if [ -d "out" ]; then
          echo "Generated languages:"
          ls -la out/
          echo "Language directories:"
          for lang in out/*/; do
            if [ -d "$lang" ]; then
              lang_name=$(basename "$lang")
              echo "- $lang_name"
            fi
          done
        else
          echo "No out directory found"
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: language-packages
        path: out/
        retention-days: 1

  deploy-languages:
    needs: build
    if: needs.build.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: language-packages
        path: out/
    
    - name: Deploy all language packages
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Debug: Show current directory and contents
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        
        # Check if out directory exists and has content
        if [ ! -d "out" ] || [ -z "$(ls -A out)" ]; then
          echo "No language packages found to deploy"
          echo "out directory contents:"
          ls -la out/ || echo "out directory does not exist"
          exit 0
        fi
        
        echo "Found out directory with contents:"
        ls -la out/
        
        # Process each language directory
        for lang_dir in out/*/; do
          if [ -d "$lang_dir" ]; then
            lang_name=$(basename "$lang_dir")
            echo "Processing language: $lang_name"
            echo "Language directory: $lang_dir"
            echo "Language directory contents:"
            ls -la "$lang_dir"
            
            # Create or switch to language branch
            echo "Creating/checking out branch: $lang_name"
            git checkout -B "$lang_name"
            
            # Remove existing content (but keep .git)
            find . -mindepth 1 -not -path "./.git*" -delete
            
            # Copy new content if directory has files
            if [ "$(ls -A "$lang_dir")" ]; then
              echo "Copying files from $lang_dir to current directory"
              cp -r "$lang_dir"/* .
              echo "Copied $lang_name files successfully"
              echo "Current directory contents after copy:"
              ls -la
            else
              echo "No $lang_name files to copy"
              continue
            fi
            
            # Add all files
            git add .
            
            # Commit if there are changes
            if git diff --staged --quiet; then
              echo "No changes to commit for $lang_name"
            else
              echo "Committing changes for $lang_name"
              git commit -m "Update $lang_name package from main branch"
              echo "Pushing to origin/$lang_name"
              git push origin "$lang_name" --force
              echo "Successfully deployed $lang_name package"
            fi
          fi
        done
        
        echo "All language packages processed" 